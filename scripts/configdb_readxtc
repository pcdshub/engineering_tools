#! /bin/bash
usage()
{
cat << EOF
usage: $0 options

We will run configdb_readxtc

OPTIONS:
-u user (needs to be able to log into the psananeh/feh)
-e expnumber 
EOF
}

if [[ ($1 == "--help") || ($1 == "-h") ]]; then
	usage
	exit 0
fi

USER=`whoami`
ARGSTR=''

while getopts "u:e:" OPTION
do
    case $OPTION in
	u)
	    USER=$OPTARG
	    ;;
	e)
	    EXP=$OPTARG
	    ;;
	?)
	    usage
	    exit
	    ;;
	esac
done

if [[ $USER =~ "opr" ]]; then
    printf "Please enter user name (cannot run as xppopr): \n"; read USER
fi

: ${EXP:=`get_curr_exp`}
HUTCH=${EXP:0:3}

# check if experiment is passed, then use that
#
#    HUTCH=`get_info --gethutch`
#    COMMAND_ARGS=$COMMAND_ARGS' -H '$HUTCH
#    EXP=`get_info --exp --hutch $HUTCH`

#
# get executable into variable.
#

opt_dir="/reg/g/pcds/dist/pds/$HUTCH/current/build/pdsapp/bin/x86_64-rhel7-opt"
eval find $opt_dir/configdb_readxtc
ret_code=$?
if [ $ret_code == 0 ]; then
    EXE='/reg/g/pcds/dist/pds/'$HUTCH'/current/build/pdsapp/bin/x86_64-rhel7-opt/configdb_readxtc'
else
    dir="/reg/g/pcds/dist/pds/xpp/current/build/pdsapp/bin/x86_64-rhel7"
    eval find $dir/configdb_readxtc
    ret_code=$?
    if [ $ret_code2 == 0 ]; then
	EXE='/reg/g/pcds/dist/pds/'$HUTCH'/current/build/pdsapp/bin/x86_64-rhel7/configdb_readxtc'
    else
	echo 'could not find configdb_readxtc executable'
	exit
    fi
fi

#
# check hostname,only ssh if on control machine.
#
if [[ $HOSTNAME =~ "psana" ]]; then
    $EXE /reg/d/psdm/$HUTCH/$EXP/xtc
elif  [[ $HOSTNAME =~ "psusr" ]]; then
    ssh -Y $USER@psana "$EXE /reg/d/psdm/$HUTCH/$EXP/xtc"
else
    echo $EXE /reg/d/psdm/$HUTCH/$EXP/xtc
    ssh -Y $USER@psdev ssh -Y psana "$EXE /reg/d/psdm/$HUTCH/$EXP/xtc"
fi
 
   
