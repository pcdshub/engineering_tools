#!/bin/bash
usage()
{
cat << EOF
usage: $0 options

OPTIONS:
-w sort windows after start
-p select partition (same as used last)
-s silent (do not email jana)
EOF
}

NOTRUNNING='Not running'
AIMHOST=$HOSTNAME
SELPART=''
DOWIN=''
#make it silent for now until done with testing and jana has been warned
SILENT=1

if [[ ($1 == "--help") || ($1 == "-h") ]]; then
	usage
	exit 0
fi

while getopts "m:pws" OPTION
do
    case $OPTION in
	p)
	    SELPART='Select Partition'
	    ;;
	w)
	    DOWIN='Sort Windows'
	    ;;
	s)
	    SILENT=1
	    ;;
	m) 
	    AIMHOST=$OPTARG
	    ;;
	?)
	    usage
	    exit 1
	    ;;

	esac
done

if [[ `whoami` != *'opr'* ]]; then
    echo "Please run the DAQ from the operator account!"
    exit
fi

CNFEXT=.cnf
if [[ $AIMHOST == 'cxi-daq' ]]; then
    CNFEXT=_0.cnf
elif [[ $AIMHOST == 'cxi-monitor' ]]; then
    CNFEXT=_1.cnf
fi

HUTCH=`get_hutch_name`
if [[ $HUTCH == 'xpp' ]]; then
    FEZ='172.21.22'
elif [[ $HUTCH == 'xcs' ]]; then
    FEZ='172.21.25'
elif [[ $HUTCH == 'sxr' ]]; then
    FEZ='172.21.21'
elif [[ $HUTCH == 'mec' ]]; then
    FEZ='172.21.27'
elif [[ $HUTCH == 'mfx' ]]; then
    FEZ='172.21.24'
elif [[ $HUTCH == 'cxi' ]]; then
    FEZ='172.21.26'
elif [[ $HUTCH == 'amo' ]]; then
    FEZ='172.21.20'
elif [[ $HUTCH == 'det' ]]; then
    FEZ='172.21.59'
fi
IS_DAQ_HOST=`/sbin/ifconfig | grep inet | grep $FEZ | wc -l`

if [ $IS_DAQ_HOST == 0 ]; then
    HOSTS=`netconfig search $HUTCH-*-fez --brief | sed s/-fez//g`
    WORKINGHOSTS=''
    #make sure at least cds is up.
    for HOST in $HOSTS; do
	ping -w 2 $HOST >/dev/null 2>&1
	if [[ $? == 0 ]]; then
	    WORKINGHOSTS=$WORKINGHOSTS' '$HOST
	fi
    done
    echo $AIMHOST does not have FEZ, please choose one of the following machines to run the DAQ: $WORKINGHOSTS
    echo '"restartdaq <machine_with_FEZ>"'
    exit
fi

#go to hutches DAQ scripts directory (puts pid file in consistent location)
cd /reg/g/pcds/dist/pds/$HUTCH/scripts/

#/reg/g/xpp/scripts/stopdaq
DAQHOST=`wheredaq`
if [[ $DAQHOST != *$NOTRUNNING* ]]; then
    echo stop the DAQ on $DAQHOST from $HOSTNAME
    T="$(date +%s%N)"
    /reg/g/pcds/dist/pds/$HUTCH/current/tools/procmgr/procmgr stop \
	/reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT 

    PLATFORM=`grep 'if not platform' /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT | awk '{print $NF}' | sed s/\'//g`
    if [ -f /reg/g/pcds/dist/pds/$HUTCH/scripts/p$PLATFORM$CNFEXT.running ]; then
	echo 'the DAQ did not stop properly, exit now and try again or call Silke or the DAQ phone'
	exit
    fi
    T2="$(($(date +%s%N)-T))"
    S="$((T2/1000000000))"
    M="$((T2/1000000))"
    echo 'it took '$S'.'$M' for stopping the DAQ'
else
    PLATFORM=`grep 'if not platform' /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT | awk '{print $NF}' | sed s/\'//g`
    if [ -f /reg/g/pcds/dist/pds/$HUTCH/scripts/p$PLATFORM$CNFEXT.running ]; then
	echo while DAQ reports to not run, will stop the DAQ on $DAQHOST from $HOSTNAME to clear the p$PLATFORM$CNFEXT.running file
	T="$(date +%s%N)"
	/reg/g/pcds/dist/pds/$HUTCH/current/tools/procmgr/procmgr stop \
	    /reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT 

        if [ -f /reg/g/pcds/dist/pds/$HUTCH/scripts/p$PLATFORM$CNFEXT.running ]; then
            echo 'the DAQ did not stop properly, exit now and try again follow the escalation procedure'
            exit
        fi
        echo DAQ is now stopped
    else
        echo DAQ is currently not running
    fi
fi


#start DAQ on AIMHOST
T="$(date +%s%N)"
echo start DAQ on $AIMHOST
if [ $HOSTNAME == $AIMHOST ]; then
    unset PYTHONPATH
    unset LD_LIBRARY_PATH
    /reg/g/pcds/dist/pds/$HUTCH/current/tools/procmgr/procmgr start \
	/reg/g/pcds/dist/pds/$HUTCH/scripts/$HUTCH$CNFEXT -c 2000000000 -o /reg/g/pcds/pds/$HUTCH/logfiles
else
    ssh -Y $AIMHOST restartdaq
fi

DAQHOST=`wheredaq`
if [[ $DAQHOST == *$NOTRUNNING* ]]; then
    echo 'we tried restarting the DAQ, but wheredaq does not return a host!'
    if [[ $DAQHOST != $AIMHOST ]]; then
	echo 'We tried to run the DAQ on another host: target '$AIMHOST' from '$HOSTNAME
    fi
    exit
else
    echo the DAQ is now running on $DAQHOST
    T2="$(($(date +%s%N)-T))"
    S="$((T2/1000000000))"
    M="$((T2/1000000))"
    echo 'and '$S'.'$M' for starting the DAQ'
fi

if [ ${#DOWIN} != 0 ] ||  [ ${#SELPART} != 0 ]; then
    if  [ $HUTCH  == 'xpp' ] || [ $HUTCH  == 'xcs' ]; then
	if  [ ! -f /usr/bin/xdotool ]; then
	    echo 'xdotool not installed, ask IT to do so'
	    DOWIN=0
	    SELPART=0
	fi
    fi
    if [ ! /reg/neh/operator/$HUTCH\opr/bin/$HUTCH\_cleanup_windows_daq ]; then
	if [ ${#DOWIN} != 0 ]; then
	    echo 'This instrument does not have standard locations for DAQ windows setup'
	fi
	DOWIN=0
    fi
fi

if [ ${#DOWIN} != 0 ]; then    
    T="$(date +%s%N)"
    if [ $HUTCH == 'xpp' ]; then
	test=`xdotool search --sync --onlyvisible --name 'ProcStat'` 
    fi
    if [ $HUTCH == 'xcs' ]; then
	sleep 2
    fi
    echo 'resorting the windows now using: /reg/neh/operator/'$HUTCH'opr/bin/'$HUTCH'_cleanup_windows_daq'
    /reg/neh/operator/$HUTCH\opr/bin/$HUTCH\_cleanup_windows_daq
    Tdinter="$(($(date +%s%N)-T))"
    Sinter="$((Tdinter/1000000000))"
    Minter="$((Tdinter/1000000))"
    echo 'and '$Sinter'.'$Minter' extra seconds for windows'
fi

if [ ${#SELPART} != 0 ]; then    
    DAQC=`xdotool search  --onlyvisible --name 'DAQ Control'`
    #echo $DAQC
    xdotool mousemove --sync --window $DAQC 80 230
    xdotool windowfocus $DAQC
    xdotool click 1 
    
    PARTSEL=`xdotool search  --onlyvisible --sync --name 'Partition Selection'`
    YLOW=`xdotool search --name 'Partition Selection' getwindowgeometry %@ | grep Geometry | awk '{print $2}' | sed s/x/" "/g | awk '{print $2}'`
        #echo $PARTSEL
    xdotool mousemove --sync --window $PARTSEL 80 $(($YLOW-28)) 
    xdotool click 1 
fi

if [ ${SILENT} == 0 ];then
    /reg/g/pcds/dist/pds/scripts/txtjana.sh
    printf 'email jana that we restarted the DAQ\n'
fi

exit
